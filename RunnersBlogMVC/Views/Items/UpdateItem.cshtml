@using RunnersBlogMVC.DTO
@using RunnersBlogMVC.Models
@using RunnersBlogMVC.Models.Enums;
@model Item
@{
    ViewData["Title"] = "Edit";
}
<h1>
    Edit Item
</h1>
<form asp-controller="Items" asp-action="UpdateById" asp-route-id="@Model.Id"  method="post">
    <div class="border p-3 mt-4">
        <div asp-validation-summary="All"></div>
        <div class="mb-3">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" value="@Model.Name" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="Price" class="control-label"></label>
            <input asp-for="Price" class="form-control" value="@Model.Price"/>
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="Description" class="control-label"></label>
            <input asp-for="Description" class="form-control" value="@Model.Description" />
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div>
        <select asp-for="ItemAvailabilityStatus" asp-items="Html.GetEnumSelectList<ItemStatus>()">
            <option selected="selected" value="">Please select</option>
        </select>
        </div>
        <button type="submit" class="btn btn-primary" style="width:150px">Update</button>
        <a asp-controller="Items" asp-action="GetAllItems" class="btn btn-secondary" style="width:150px">
            Back to List
        </a>
    </div>
</form>



@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
